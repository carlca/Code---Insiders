{
    "macOSAppIconRefresh": true,
    "telemetry.machineId": "36ec910d688acd007eb110425c1ec45c8aae321d3479aff6e48c95ef59ba9530",
    "lastKnownKeybindings": {
        "workbench.action.openGlobalSettings": {
            "id": "workbench.action.openGlobalSettings",
            "label": "⌘,",
            "isNative": false
        },
        "workbench.action.openGlobalKeybindings": {
            "id": "workbench.action.openGlobalKeybindings",
            "label": "⌘K ⌘S",
            "isNative": false
        },
        "workbench.extensions.action.showRecommendedKeymapExtensions": {
            "id": "workbench.extensions.action.showRecommendedKeymapExtensions",
            "label": "⌘K ⌘M",
            "isNative": false
        },
        "workbench.action.selectTheme": {
            "id": "workbench.action.selectTheme",
            "label": "⌘K ⌘T",
            "isNative": false
        },
        "workbench.action.quit": {
            "id": "workbench.action.quit",
            "label": "Cmd+Q",
            "isNative": true
        },
        "workbench.action.files.newUntitledFile": {
            "id": "workbench.action.files.newUntitledFile",
            "label": "Cmd+N",
            "isNative": true
        },
        "workbench.action.files.openFileFolder": {
            "id": "workbench.action.files.openFileFolder",
            "label": "Cmd+O",
            "isNative": true
        },
        "workbench.action.reopenClosedEditor": {
            "id": "workbench.action.reopenClosedEditor",
            "label": "Shift+Cmd+T",
            "isNative": true
        },
        "workbench.action.openRecent": {
            "id": "workbench.action.openRecent",
            "label": "Ctrl+R",
            "isNative": true
        },
        "workbench.action.files.save": {
            "id": "workbench.action.files.save",
            "label": "Cmd+S",
            "isNative": true
        },
        "workbench.action.files.saveAs": {
            "id": "workbench.action.files.saveAs",
            "label": "Shift+Cmd+S",
            "isNative": true
        },
        "workbench.action.files.saveAll": {
            "id": "workbench.action.files.saveAll",
            "label": "Alt+Cmd+S",
            "isNative": true
        },
        "workbench.action.newWindow": {
            "id": "workbench.action.newWindow",
            "label": "Shift+Cmd+N",
            "isNative": true
        },
        "workbench.action.closeWindow": {
            "id": "workbench.action.closeWindow",
            "label": "Cmd+W",
            "isNative": true
        },
        "workbench.action.closeFolder": {
            "id": "workbench.action.closeFolder",
            "label": "⌘K F",
            "isNative": false
        },
        "workbench.action.closeActiveEditor": {
            "id": "workbench.action.closeActiveEditor",
            "label": "Cmd+W",
            "isNative": true
        },
        "undo": {
            "id": "undo",
            "label": "Cmd+Z",
            "isNative": true
        },
        "redo": {
            "id": "redo",
            "label": "Shift+Cmd+Z",
            "isNative": true
        },
        "editor.action.clipboardCutAction": {
            "id": "editor.action.clipboardCutAction",
            "label": "Cmd+X",
            "isNative": true
        },
        "editor.action.clipboardCopyAction": {
            "id": "editor.action.clipboardCopyAction",
            "label": "Cmd+C",
            "isNative": true
        },
        "editor.action.clipboardPasteAction": {
            "id": "editor.action.clipboardPasteAction",
            "label": "Cmd+V",
            "isNative": true
        },
        "actions.find": {
            "id": "actions.find",
            "label": "Cmd+F",
            "isNative": true
        },
        "editor.action.startFindReplaceAction": {
            "id": "editor.action.startFindReplaceAction",
            "label": "Alt+Cmd+F",
            "isNative": true
        },
        "workbench.action.findInFiles": {
            "id": "workbench.action.findInFiles",
            "label": "Shift+Cmd+F",
            "isNative": true
        },
        "workbench.action.replaceInFiles": {
            "id": "workbench.action.replaceInFiles",
            "label": "Shift+Cmd+H",
            "isNative": true
        },
        "editor.emmet.action.expandAbbreviation": {
            "id": "editor.emmet.action.expandAbbreviation",
            "label": "Tab",
            "isNative": true
        },
        "editor.action.commentLine": {
            "id": "editor.action.commentLine",
            "label": "⌘/",
            "isNative": false
        },
        "editor.action.blockComment": {
            "id": "editor.action.blockComment",
            "label": "Shift+Alt+A",
            "isNative": true
        },
        "editor.action.insertCursorAbove": {
            "id": "editor.action.insertCursorAbove",
            "label": "Alt+Cmd+Up",
            "isNative": true
        },
        "editor.action.insertCursorBelow": {
            "id": "editor.action.insertCursorBelow",
            "label": "Alt+Cmd+Down",
            "isNative": true
        },
        "editor.action.insertCursorAtEndOfEachLineSelected": {
            "id": "editor.action.insertCursorAtEndOfEachLineSelected",
            "label": "Shift+Alt+I",
            "isNative": true
        },
        "editor.action.addSelectionToNextFindMatch": {
            "id": "editor.action.addSelectionToNextFindMatch",
            "label": "Cmd+D",
            "isNative": true
        },
        "editor.action.selectHighlights": {
            "id": "editor.action.selectHighlights",
            "label": "Shift+Cmd+L",
            "isNative": true
        },
        "editor.action.copyLinesUpAction": {
            "id": "editor.action.copyLinesUpAction",
            "label": "Shift+Alt+Up",
            "isNative": true
        },
        "editor.action.copyLinesDownAction": {
            "id": "editor.action.copyLinesDownAction",
            "label": "Shift+Alt+Down",
            "isNative": true
        },
        "editor.action.moveLinesUpAction": {
            "id": "editor.action.moveLinesUpAction",
            "label": "Alt+Up",
            "isNative": true
        },
        "editor.action.moveLinesDownAction": {
            "id": "editor.action.moveLinesDownAction",
            "label": "Alt+Down",
            "isNative": true
        },
        "editor.action.selectAll": {
            "id": "editor.action.selectAll",
            "label": "Cmd+A",
            "isNative": true
        },
        "editor.action.smartSelect.grow": {
            "id": "editor.action.smartSelect.grow",
            "label": "Ctrl+Shift+Cmd+Right",
            "isNative": true
        },
        "editor.action.smartSelect.shrink": {
            "id": "editor.action.smartSelect.shrink",
            "label": "Ctrl+Shift+Cmd+Left",
            "isNative": true
        },
        "workbench.view.explorer": {
            "id": "workbench.view.explorer",
            "label": "Shift+Cmd+E",
            "isNative": true
        },
        "workbench.view.search": {
            "id": "workbench.view.search",
            "label": "Shift+Cmd+F",
            "isNative": true
        },
        "workbench.view.scm": {
            "id": "workbench.view.scm",
            "label": "Ctrl+Shift+G",
            "isNative": true
        },
        "workbench.view.debug": {
            "id": "workbench.view.debug",
            "label": "Shift+Cmd+D",
            "isNative": true
        },
        "workbench.view.extensions": {
            "id": "workbench.view.extensions",
            "label": "Shift+Cmd+X",
            "isNative": true
        },
        "workbench.action.output.toggleOutput": {
            "id": "workbench.action.output.toggleOutput",
            "label": "Shift+Cmd+U",
            "isNative": true
        },
        "workbench.debug.action.toggleRepl": {
            "id": "workbench.debug.action.toggleRepl",
            "label": "Shift+Cmd+Y",
            "isNative": true
        },
        "workbench.action.terminal.toggleTerminal": {
            "id": "workbench.action.terminal.toggleTerminal",
            "label": "⌃`",
            "isNative": false
        },
        "workbench.actions.view.problems": {
            "id": "workbench.actions.view.problems",
            "label": "Shift+Cmd+M",
            "isNative": true
        },
        "workbench.action.showCommands": {
            "id": "workbench.action.showCommands",
            "label": "Shift+Cmd+P",
            "isNative": true
        },
        "workbench.action.toggleFullScreen": {
            "id": "workbench.action.toggleFullScreen",
            "label": "Ctrl+Cmd+F",
            "isNative": true
        },
        "workbench.action.toggleZenMode": {
            "id": "workbench.action.toggleZenMode",
            "label": "⌘K Z",
            "isNative": false
        },
        "workbench.action.splitEditor": {
            "id": "workbench.action.splitEditor",
            "label": "⌘\\",
            "isNative": false
        },
        "workbench.action.toggleEditorGroupLayout": {
            "id": "workbench.action.toggleEditorGroupLayout",
            "label": "Alt+Cmd+0",
            "isNative": true
        },
        "workbench.action.toggleSidebarVisibility": {
            "id": "workbench.action.toggleSidebarVisibility",
            "label": "Cmd+B",
            "isNative": true
        },
        "workbench.action.togglePanel": {
            "id": "workbench.action.togglePanel",
            "label": "Cmd+J",
            "isNative": true
        },
        "editor.action.toggleWordWrap": {
            "id": "editor.action.toggleWordWrap",
            "label": "Alt+Z",
            "isNative": true
        },
        "workbench.action.zoomIn": {
            "id": "workbench.action.zoomIn",
            "label": "⌘=",
            "isNative": false
        },
        "workbench.action.zoomOut": {
            "id": "workbench.action.zoomOut",
            "label": "⌘-",
            "isNative": false
        },
        "workbench.action.zoomReset": {
            "id": "workbench.action.zoomReset",
            "label": "⌘NumPad0",
            "isNative": false
        },
        "workbench.action.navigateBack": {
            "id": "workbench.action.navigateBack",
            "label": "⌃-",
            "isNative": false
        },
        "workbench.action.navigateForward": {
            "id": "workbench.action.navigateForward",
            "label": "⌃⇧-",
            "isNative": false
        },
        "workbench.action.nextEditor": {
            "id": "workbench.action.nextEditor",
            "label": "Alt+Cmd+Right",
            "isNative": true
        },
        "workbench.action.previousEditor": {
            "id": "workbench.action.previousEditor",
            "label": "Alt+Cmd+Left",
            "isNative": true
        },
        "workbench.action.openNextRecentlyUsedEditorInGroup": {
            "id": "workbench.action.openNextRecentlyUsedEditorInGroup",
            "label": "Ctrl+Tab",
            "isNative": true
        },
        "workbench.action.openPreviousRecentlyUsedEditorInGroup": {
            "id": "workbench.action.openPreviousRecentlyUsedEditorInGroup",
            "label": "Ctrl+Shift+Tab",
            "isNative": true
        },
        "workbench.action.focusFirstEditorGroup": {
            "id": "workbench.action.focusFirstEditorGroup",
            "label": "Cmd+1",
            "isNative": true
        },
        "workbench.action.focusSecondEditorGroup": {
            "id": "workbench.action.focusSecondEditorGroup",
            "label": "Cmd+2",
            "isNative": true
        },
        "workbench.action.focusThirdEditorGroup": {
            "id": "workbench.action.focusThirdEditorGroup",
            "label": "Cmd+3",
            "isNative": true
        },
        "workbench.action.focusNextGroup": {
            "id": "workbench.action.focusNextGroup",
            "label": "⌘K ⌘→",
            "isNative": false
        },
        "workbench.action.focusPreviousGroup": {
            "id": "workbench.action.focusPreviousGroup",
            "label": "⌘K ⌘←",
            "isNative": false
        },
        "workbench.action.quickOpen": {
            "id": "workbench.action.quickOpen",
            "label": "Cmd+P",
            "isNative": true
        },
        "workbench.action.gotoSymbol": {
            "id": "workbench.action.gotoSymbol",
            "label": "Shift+Cmd+O",
            "isNative": true
        },
        "workbench.action.showAllSymbols": {
            "id": "workbench.action.showAllSymbols",
            "label": "Cmd+T",
            "isNative": true
        },
        "editor.action.goToDeclaration": {
            "id": "editor.action.goToDeclaration",
            "label": "F12",
            "isNative": true
        },
        "editor.action.goToImplementation": {
            "id": "editor.action.goToImplementation",
            "label": "Cmd+F12",
            "isNative": true
        },
        "workbench.action.gotoLine": {
            "id": "workbench.action.gotoLine",
            "label": "Ctrl+G",
            "isNative": true
        },
        "workbench.action.debug.start": {
            "id": "workbench.action.debug.start",
            "label": "F5",
            "isNative": true
        },
        "workbench.action.debug.run": {
            "id": "workbench.action.debug.run",
            "label": "Ctrl+F5",
            "isNative": true
        },
        "workbench.action.debug.stop": {
            "id": "workbench.action.debug.stop",
            "label": "Shift+F5",
            "isNative": true
        },
        "workbench.action.debug.restart": {
            "id": "workbench.action.debug.restart",
            "label": "Shift+Cmd+F5",
            "isNative": true
        },
        "workbench.action.debug.stepOver": {
            "id": "workbench.action.debug.stepOver",
            "label": "F10",
            "isNative": true
        },
        "workbench.action.debug.stepInto": {
            "id": "workbench.action.debug.stepInto",
            "label": "F11",
            "isNative": true
        },
        "workbench.action.debug.stepOut": {
            "id": "workbench.action.debug.stepOut",
            "label": "Shift+F11",
            "isNative": true
        },
        "workbench.action.debug.continue": {
            "id": "workbench.action.debug.continue",
            "label": "F5",
            "isNative": true
        },
        "editor.debug.action.toggleColumnBreakpoint": {
            "id": "editor.debug.action.toggleColumnBreakpoint",
            "label": "Shift+F9",
            "isNative": true
        },
        "workbench.action.switchWindow": {
            "id": "workbench.action.switchWindow",
            "label": "Ctrl+W",
            "isNative": true
        },
        "workbench.action.tasks.build": {
            "id": "workbench.action.tasks.build",
            "label": "Shift+Cmd+B",
            "isNative": true
        }
    },
    "theme": "vs-dark johnpapa-winteriscoming-themes-WinterIsComing-dark-color-theme-json",
    "themeBackground": "#282822",
    "pickerWorkingDir": "/Users/carlca/code/go/src/github.com/carlca",
    "openedPathsList": {
        "workspaces": [
            "/Users/carlca",
            {
                "id": "7ad0713deb6bb0451010f3b745dd6aa1",
                "configPath": "/Users/carlca/code/go/src/github.com/carlca/Go Programming Language.code-workspace"
            },
            {
                "id": "f6e1353d7078621af61990924e9676ea",
                "configPath": "/Users/carlca/code/go/src/github.com/carlca/carlca.code-workspace"
            },
            {
                "id": "c4a0a8f8c9a5f9234fb719265ea65c87",
                "configPath": "/Users/carlca/code/go/src/Src.code-workspace"
            },
            "/Users/carlca/code/go/src/github.com/carlca/bigdata/envtest/kelsey",
            "/Users/carlca/code/extempore/scratch",
            "/Users/carlca/.vscode-insiders/extensions/extemporelang.vscode-extempore-0.0.9/out",
            {
                "id": "4d14640910d4aac32e4b278940370743",
                "configPath": "/Users/carlca/code/extempore/extempore.code-workspace"
            },
            "/Users/carlca/Documents",
            "/Users/carlca/Library/Application Support/Code - Insiders/User",
            "/Users/carlca/code/go/src/github.com/carlca/bigdata",
            "/Users/carlca/code/go/src/github.com/carlca/bigdata/envtest/std",
            "/Users/carlca/code/go/src/github.com/adonovan/gopl.io",
            "/Users/carlca/code/go/src/github.com/carlca/bigdata/servertest/.vscode",
            "/Users/carlca/code/go/src/github.com/carlca/bigdata/ormrun",
            {
                "id": "8fd8281904d147c625520bbda1060a45",
                "configPath": "/Users/carlca/code/go/src/github.com/carlca/Gophercises.code-workspace"
            },
            "/Users/carlca/css-grid-master",
            {
                "id": "ccca1f34e557890df62be7cab12c84b6",
                "configPath": "/Users/carlca/css-grid.code-workspace"
            },
            "/Users/carlca/code/go/src/github.com/carlca/bigdata/ormtest",
            "/Users/carlca/code/go/src/github.com/rivo/tview/demos/presentation",
            "/Users/carlca/code/go/src/github.com/carlca/bigdata/sqlservertest",
            "/Users/carlca/hugosite",
            "/Users/carlca/code/go/src/github.com/carlca/bigdata/sqlorm",
            "/Users/carlca/.vscode-insiders/extensions/Tyriar.vscode-terminal-here-0.0.5/out/src",
            "/Users/carlca/code/go/src/github.com/carlca/alfred",
            "/Users/carlca/code/vue.js/test1",
            "/Users/carlca/code/go/src/github.com/carlca/errortest",
            "/Users/carlca/Downloads/Open in Code - Insiders.app",
            "/Users/carlca/code/go/src/github.com/carlca/utils/dirx",
            "/Users/carlca/code/vscode-theme-generator-quick-start",
            "/Users/carlca/code/go/src/github.com/carlca/twenv",
            {
                "id": "e1f25f9fc3940e9a8b3cadb662a0c0af",
                "configPath": "/Users/carlca/code/Untitled.code-workspace"
            },
            "/Users/carlca/code/go/src/github.com/carlca/gotwitter",
            "/Users/carlca/code/go/src/gitlab.com/hackebrot/tweets",
            {
                "id": "48a1a13f58776188cc471252b74048af",
                "configPath": "/Users/carlca/code/go/src/github.com/carlca/Current.code-workspace"
            },
            "/Users/carlca/code/go/src/github.com/campoy/tools/imgcat",
            "/Users/carlca/code/go/src/github.com/rakyll/portmidi"
        ],
        "files": [
            "/Users/carlca/code/go/src/github.com/adonovan/gopl.io/ch1/echo4/main.go",
            "/Users/carlca/.vscode-insiders/extensions/lukehoban.go-0.6.73/scripts/terminateProcess.sh",
            "/Users/carlca/Downloads/URLLink(1).acsm",
            "/Users/carlca/Downloads/URLLink.acsm",
            "/Users/carlca/code/go/src/github.com/carlca/bigdata/ormrun/ormrun.go",
            "/Users/carlca/code/go/src/github.com/rivo/tview/demos/presentation/main.go",
            "/Users/carlca/Downloads/Go-0.6.70.vsix",
            "/Users/carlca/code/go/src/github.com/carlca/bigdata/sqlorm/sqlorm.go",
            "/Users/carlca/code/go/src/github.com/carlca/docker/main.go",
            "/Users/carlca/code/now/my-web-app/index.html",
            "/Users/carlca/Downloads/VS Code.icns",
            "/Users/carlca/code/go/src/github.com/carlca/twenv/twenv.go",
            "/Users/carlca/code/dotnet/hwapp/Program.cs",
            "/Users/carlca/code/go/src/gitlab.com/hackebrot/tweets/main.go",
            "/Users/carlca/code/go/src/github.com/carlca/gotwitter/main.go",
            "/Users/carlca/Library/Application Support/Code - Insiders/User/snippets/go.json"
        ]
    },
    "windowsState": {
        "openedWindows": [],
        "lastPluginDevelopmentHostWindow": {
            "uiState": {
                "mode": 1,
                "x": 448,
                "y": 156,
                "width": 1024,
                "height": 768
            }
        },
        "lastActiveWindow": {
            "folderPath": "/Users/carlca",
            "backupPath": "/Users/carlca/Library/Application Support/Code - Insiders/Backups/76b25daf540968295005ee4ea6882ac3",
            "uiState": {
                "mode": 1,
                "x": 0,
                "y": 0,
                "width": 1920,
                "height": 1080
            }
        }
    },
    "macOSAppIconRefresh2": true,
    "macOSAppIconRefresh3": true
}